import numpy as np
import matplotlib.pyplot as plt

# Datos
fertilizante = np.array([0, 20, 40, 60, 80])
rendimiento = np.array([1.0, 1.5, 2.5, 3.5, 4.0])

# Función para calcular la tabla de diferencias divididas
def diferencias_divididas(x, y):
    n = len(y)
    coeficientes = np.zeros((n, n))
    coeficientes[:, 0] = y

    for j in range(1, n):
        for i in range(n - j):
            coeficientes[i][j] = (coeficientes[i + 1][j - 1] - coeficientes[i][j - 1]) / (x[i + j] - x[i])

    return coeficientes[0]

# Función de interpolación de Newton
def polinomio_newton(x, coeficientes, puntos_x, valor):
    n = len(coeficientes)
    resultado = coeficientes[0]
    producto = 1

    for i in range(1, n):
        producto *= (valor - puntos_x[i - 1])
        resultado += coeficientes[i] * producto

    return resultado

# Cálculo de los coeficientes
coeficientes = diferencias_divididas(fertilizante, rendimiento)

# Estimación del rendimiento para 50 kg de fertilizante
valor_estimado = 50
rendimiento_estimado = polinomio_newton(fertilizante, coeficientes, fertilizante, valor_estimado)

# Imprimir resultado
print(f"Rendimiento estimado para {valor_estimado} kg de fertilizante: {rendimiento_estimado:.2f} toneladas")

# Graficar
x_range = np.linspace(0, 80, 100)
y_interp = [polinomio_newton(fertilizante, coeficientes, fertilizante, x) for x in x_range]

plt.scatter(fertilizante, rendimiento, color='red', label='Datos Originales')
plt.plot(x_range, y_interp, label='Interpolación de Newton', color='blue')
plt.scatter(valor_estimado, rendimiento_estimado, color='green', label='Estimación (50 kg)')
plt.xlabel('Cantidad de Fertilizante (kg)')
plt.ylabel('Rendimiento (toneladas)')
plt.title('Interpolación de Newton para Rendimiento de Cosecha')
plt.legend()
plt.grid()
plt.show()